<?xml version="1.0" encoding="UTF-8" ?>  
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">


<mapper namespace="cn.max.core.dao.product.BrandDao">

	<!-- resultMap  -->
	<resultMap type="Brand" id="brand">
		<result column="id" property="id"/>
		<result column="name" property="name"/>
		<result column="description" property="description"/>
		<result column="img_url" property="imgUrl"/>
		<result column="sort" property="sort"/>
		<result column="is_display" property="isDisplay"/>
	</resultMap>


	<!-- #{isDisplay} 就是加上引号的匹配， 而${xxx} 则是原生的，一般是用于指示字段 -->
	<!--可以动态选择要显示的数据是什么fields是参数，比如 id,name -->
	<sql id="brandSelector">
		select
		<if test="fields != null">
			${fields}
		</if>
		<if test="fields == null">
			id , name ,description,img_url,sort,is_display
		</if>
		from bbs_brand
	</sql>

	<!--进行模糊匹配-->
	<sql id="brandWhere">
		<where>
			<if test="isDisplay != null">
				is_display = #{isDisplay}
			</if>
			<if test="name != null">
				<if test="nameLike == false">
					and name = #{name}
				</if>
				<if test="nameLike == true">
					and name like "%"#{name}"%"
				</if>
			</if>
		</where>
	</sql>

	<!--数组形式，可以多个条件组合orderBy-->
	<sql id="brandOrderBy">
		<if test="fieldOrders != null and fieldOrders.size != 0">
			ORDER BY
			<foreach collection="fieldOrders" item="fieldOrder" separator=",">
				${fieldOrder.field} ${fieldOrder.order}
			</foreach>
		</if>
	</sql>

	<sql id="brandLimit">
		<if test="startRow != null">
			limit #{startRow}, #{pageSize}
		</if>
	</sql>

	<!-- 查询品牌   get*   -->
	<select id="getBrandList" parameterType="BrandQuery" resultMap="brand">
		<include refid="brandSelector"/>
		<include refid="brandWhere"/>
		<include refid="brandOrderBy"/>
		<include refid="brandLimit"/>
	</select>

	<!-- 查询品牌   get*   -->
	<select id="getBrandListWithPage" parameterType="Brand" resultMap="brand">
		select id , name ,description,img_url,sort,is_display
		from bbs_brand
		<where>
			<if test="isDisplay != null">
				is_display = #{isDisplay}
			</if>
			<if test="name != null">
				and name = #{name}
			</if>
		</where>
		order by id desc
		limit #{startRow},#{pageSize}
	</select>
	
	<!-- 查询总记录数 -->
	<select id="getBrandCount" parameterType="Brand" resultType="Integer">
		select count(1)
		from bbs_brand
		<where>
			<if test="isDisplay != null">
				is_display = #{isDisplay}
			</if>
			<if test="name != null">
				and name = #{name}
			</if>
		</where>
	</select>
	<!-- 添加品牌 -->
	<insert id="addBrand" parameterType="Brand">
		insert into bbs_brand
		<trim prefix="(" suffix=")">
			name ,
			description,
			img_url,
			sort,
			is_display
		</trim>
		values
		<trim prefix="(" suffix=")">
			#{name},
			#{description},
			#{imgUrl},
			#{sort},
			#{isDisplay}
		</trim>
	</insert>
	<!-- 删除 通过主键 -->
	<delete id="deleteBrandByKey" parameterType="Integer">
		delete from bbs_brand
		<where>
			id = #{id}
		</where>
	</delete>
	<!-- 批量删除 -->
	<delete id="deleteBrandByKeys" parameterType="Integer">
		delete from bbs_brand
		<where>
			id in
			<foreach collection="array" item="id" open="(" close=")" separator="," >
				#{id}
			</foreach>
		</where>
	</delete>
	<!-- 修改 -->
	<update id="updateBrandByKey" parameterType="Brand">
		update bbs_brand
		<set>
			<if test="name != null">
				name=#{name},
			</if>
			<if test="description != null">
				description=#{description},
			</if>
			<if test="imgUrl != null">
				img_url=#{imgUrl},
			</if>
			<if test="sort != null">
				sort=#{sort},
			</if>
			<if test="isDisplay != null">
				is_display=#{isDisplay}
			</if>
		</set>
		<where>
			id=#{id}
		</where>
	</update>
	<!-- 通过ID查询一个品牌对象 -->
	<select id="getBrandByKey" parameterType="Integer" resultMap="brand">
		select id , name ,description,img_url,sort,is_display
		from bbs_brand
		<where>
			id = #{id}
		</where>
	</select>
</mapper>
